     1                                  ;
     2                                  ; file: asm_main.asm
     3                                  
     4                                  %include "asm_io.inc"
     5                              <1> 	extern  read_int, print_int, print_string
     6                              <1> 	extern	read_char, print_char, print_nl
     7                              <1> 	extern  sub_dump_regs, sub_dump_mem, sub_dump_math, sub_dump_stack
     8                              <1> 
     9                              <1> %macro 	dump_regs 1
    10                              <1> 	push	  dword %1
    11                              <1> 	call	  sub_dump_regs
    12                              <1> %endmacro
    13                              <1> 
    14                              <1> 
    15                              <1> ;
    16                              <1> ; usage: dump_mem label, start-address, # paragraphs
    17                              <1> %macro  dump_mem 3
    18                              <1> 	push	 dword %1
    19                              <1> 	push	 dword %2
    20                              <1> 	push	 dword %3
    21                              <1> 	call	 sub_dump_mem
    22                              <1> %endmacro
    23                              <1> 
    24                              <1> %macro	dump_math 1
    25                              <1> 	push	 dword %1
    26                              <1> 	call	 sub_dump_math
    27                              <1> %endmacro
    28                              <1> 
    29                              <1> %macro  dump_stack 3
    30                              <1> 	push	 dword %3
    31                              <1>         push     dword %2
    32                              <1> 	push	 dword %1
    33                              <1>         call     sub_dump_stack
    34                              <1> %endmacro
    35                                  ;
    36                                  ; initialized data is put in the .data segment
    37                                  ;
    38                                  segment .data
    39                                  
    40                                  
    41                                  ; uninitialized data is put in the .bss segment
    42                                  ;
    43                                  segment .bss
    44                                  
    45                                  ;
    46                                  ; code is put in the .text segment
    47                                  ;
    48                                  segment .text
    49                                          global  asm_main
    50                                  
    51                                  asm_main:
    52 00000000 C8000000                        enter   0,0               ; setup routine
    53 00000004 60                              pusha
    54                                  ; next print out result message as series of steps
    55                                  
    56                                  	;push 	dword 10
    57                                  	;push 	dword 20
    58 00000005 E808000000              	call 	add
    59                                  
    60 0000000A 61                              popa
    61 0000000B B800000000                      mov     eax, 0            ; return back to C
    62 00000010 C9                              leave
    63 00000011 C3                              ret
    64                                  
    65                                  
    66                                  segment .data
    67 00000000 456E74657220666972-     	prompt1	db	"Enter first number: ", 10, 0
    68 00000009 7374206E756D626572-
    69 00000012 3A200A00           
    70 00000016 456E74657220736563-     	prompt2	db	"Enter second number: ", 10, 0
    71 0000001F 6F6E64206E756D6265-
    72 00000028 723A200A00         
    73 0000002D 5468652073756D206F-     	outmsg1	db	"The sum of the two numbers is:",10,0
    74 00000036 66207468652074776F-
    75 0000003F 206E756D6265727320-
    76 00000048 69733A0A00         
    77                                  segment .bss
    78 00000000 <res 00000004>          	input1 resd 1
    79 00000004 <res 00000004>          	input2 resd 1
    80                                  segment .text
    81                                  add:	
    82                                  	;push	ebp
    83                                  
    84                                  	;mov	ebp, esp
    85                                  	;mov	eax, [ebp+8]
    86                                  	;add	eax, [ebp+12]
    87                                  	;call	print_int
    88                                  	;call	print_nl
    89                                  	;pop	ebp
    90                                  
    91 00000012 55                      	push ebp
    92 00000013 89E5                    	mov	ebp, esp
    93                                  
    94 00000015 B8[00000000]            	mov	eax, prompt1
    95 0000001A E8(00000000)            	call	print_string
    96 0000001F B8[00000000]            	mov	eax, input1
    97 00000024 E8(00000000)            	call	read_int
    98 00000029 50                      	push	eax
    99                                  b1:
   100 0000002A B8[16000000]            	mov	eax, prompt2
   101 0000002F E8(00000000)            	call	print_string
   102 00000034 B8[04000000]            	mov	eax, input2
   103 00000039 E8(00000000)            	call	read_int
   104 0000003E 50                      	push 	eax
   105                                  b2:
   106 0000003F B8[2D000000]            	mov	eax,outmsg1
   107 00000044 E8(00000000)            	call	print_string
   108 00000049 58                      	pop	eax
   109 0000004A 030424                  	add	eax, [esp]
   110 0000004D E8(00000000)            	call	print_int
   111 00000052 E8(00000000)            	call	print_nl
   112                                  
   113 00000057 58                      	pop 	eax
   114 00000058 5D                      	pop	ebp
   115                                  
   116 00000059 C3                      	ret
